<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术改变世界</title>
    <link>http://yangchao.me/</link>
    <atom:link href="http://yangchao.me/rss.xml" rel="self" type="application/rss+xml" />
    <description>阅读塑造人生</description>
    <language>zh_CN</language>
    <pubDate>Wed, 19 Mar 2014 08:13:14 -0700</pubDate>
    <lastBuildDate>Wed, 19 Mar 2014 08:13:14 -0700</lastBuildDate>

    
    <item>
      <title>内置pdf</title>
      <link>http://yangchao.me/2014/03/pdf-insert</link>
      <pubDate>20 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/pdf-insert</guid>
      <description>&lt;iframe src=&quot;/assets/pdf/data.pdf&quot; width=&quot;1150px&quot; height=&quot;800px&quot;&gt;


&lt;p&gt;In case you don&#39;t have Adobe Reader or PDF support in this web browser. &lt;a href=&quot;/assets/pdf/data.pdf&quot;&gt;Click here to download the PDF&lt;/a&gt;&lt;/p&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Scrapy中Xpath学习小结</title>
      <link>http://yangchao.me/2014/03/scrapy-xpath</link>
      <pubDate>19 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/scrapy-xpath</guid>
      <description>&lt;p&gt;因为最近要用Scrapy从网上抓取数据，重温了Xpath的用法。Scrapy的selector是实现的。&lt;/p&gt;

&lt;p&gt;写这篇博客之前，先说明下我现在的写作日期是2014年3月19日，Scrapy的版本是0.22.2。因为Scrapy的版本关系，有些指令已经有变化。比如原来的指令&lt;code&gt;hxs&lt;/code&gt;现在已经改为了&lt;code&gt;sel&lt;/code&gt;。网上好多的教程贴都存在类似问题，有时指令都已经不好用了，还是建议啃官方的manual。&lt;/p&gt;

&lt;p&gt;有关Xpath的语句，我感觉常用的就是那么几种。掌握了基本思想之后感觉和SQL差不多。下面的参考链接给了比较全。&lt;/p&gt;

&lt;p&gt;这里介绍了在scrapy shell中进行测试。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://doc.scrapy.org/en/latest/_static/selectors-sample1.html&quot;&gt;http://doc.scrapy.org/en/latest/_static/selectors-sample1.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;测试网页就是这个。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;base&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://example.com/&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example website&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image1.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Name: My image 1 &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image1_thumb.jpg&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image2.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Name: My image 2 &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image2_thumb.jpg&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image3.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Name: My image 3 &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image3_thumb.jpg&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image4.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Name: My image 4 &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image4_thumb.jpg&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image5.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Name: My image 5 &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;image5_thumb.jpg&amp;#39;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;首先打开shell，建议安装ipython。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_static&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;selector&quot;&gt;一般的selector&lt;/h3&gt;
&lt;p&gt;当加载shell之后，&lt;code&gt;sel&lt;/code&gt;就可以用了。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//title/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一般是&lt;code&gt;.extract()&lt;/code&gt;讲内容取出。&lt;/p&gt;

&lt;p&gt;下面也介绍了一些&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//title/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;Example website&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//base/@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;http://example.com/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;base::attr(href)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;http://example.com/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//a[contains(@href, &amp;quot;image&amp;quot;)]/@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;image1.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image2.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image3.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image4.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image5.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a[href*=image]::attr(href)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;image1.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image2.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image3.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image4.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image5.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//a[contains(@href, &amp;quot;image&amp;quot;)]/img/@src&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;image1_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image2_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image3_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image4_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image5_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a[href*=image] img::attr(src)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;image1_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image2_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image3_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image4_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;image5_thumb.jpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;有关根据css选取的我还不太会，觉得也不太直观。这一方面还在学习当中。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;使用正则表达式&lt;/h3&gt;
&lt;p&gt;还有一点比较方便的是使用正则表达式来选取。&lt;/p&gt;

&lt;p&gt;即用&lt;code&gt;.re&lt;/code&gt; 代替&lt;code&gt;.extract()&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//a[contains(@href, &amp;quot;image&amp;quot;)]/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;Name:\s*(.*)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;My image 1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;My image 2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;My image 3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;My image 4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;u&amp;#39;My image 5&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;xpath&quot;&gt;想对位置的Xpath&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# this is wrong - gets all &amp;lt;p&amp;gt; from the whole document&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;正确的做法应该是下面的&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;.//p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# extracts all &amp;lt;p&amp;gt; inside&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或者是这种&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;大概介绍了下scrapy中的xpath提取，大部分资料来自于官网。&lt;/p&gt;

&lt;p&gt;有关scrapy还有一些小的问题，下次再和大家分享。&lt;/p&gt;

&lt;p&gt;参考链接：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/xpath/#location-paths&quot;&gt;XML Path Language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/xpath/&quot;&gt;X3C School/XML&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>在Github中使用MathJax编辑公式</title>
      <link>http://yangchao.me/2014/03/mathjax-github</link>
      <pubDate>09 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/mathjax-github</guid>
      <description>&lt;p&gt;因为近期想写一点关于数据挖掘，机器学习的东西时要用到公式，所以就寻思着在自己github上的博客上加上公式编辑的功能。&lt;/p&gt;

&lt;p&gt;找了网上相关的资料，其实实现起来并不难。&lt;/p&gt;

&lt;p&gt;主要步骤：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1 在html加入指向MathJax的命令&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注意通常情况下，我们把这段话放在Jekyll默认的html头文件下面。这样就省得再今后每次使用都继续修改了。&lt;/p&gt;

&lt;p&gt;一般这个文件的位置是在&lt;code&gt;/_layout/index.html&lt;/code&gt; 中。&lt;/p&gt;

&lt;p&gt;如果想稍微折腾下的话，其实Mathjax有一些设定的参数可以调整&lt;/p&gt;

&lt;p&gt;比如我想让Mathjax支持公式的编号和引用，就在还是上面的文件中加上了如下代码。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;TeX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equationNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;autoNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;AMS&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useLabelIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
 &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTML-CSS&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linebreaks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;automatic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;SVG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linebreaks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;automatic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2 安装kramdown解析器&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一般默认的rdiscount会出现一些问题。所以用kramdown比较方便。有网友给出了rdiscount相关问题的解决方法，我也懒得折腾了，直接改成了kramdown。&lt;/p&gt;

&lt;p&gt;安装过程非常简单&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kramdown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3 修改默认值&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;修改_config.yml，把markdown选项修改为:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;markdown: kramdown&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装就应该没有问题了。&lt;/p&gt;

&lt;p&gt;测试：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;latex&quot;&gt;&lt;span class=&quot;sb&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;a^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; b^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; c^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在想加入公式前后两端加入两个&lt;code&gt;$&lt;/code&gt;符号就可以了。
最后效果是这个样子的。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
a^2 + b^2 = c^2
&lt;/script&gt;

&lt;p&gt;kramdown还给出了一个稍微复杂一点的例子。关于对齐的。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;latex&quot;&gt;&lt;span class=&quot;sb&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;x,y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sum&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;_{i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}^n x_ie_i, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sum&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;_{j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}^n y_je_j &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sum&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;_{i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}^n &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sum&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;_{j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}^n x_i y_j &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e_i, e_j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &amp;amp; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;x_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ldots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;, x_n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{array}{ccc}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;, e_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\cdots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;, e_n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\vdots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ddots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\vdots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e_n, e_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\cdots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &amp;amp; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\phi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e_n, e_n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{array} &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{array}{c}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      y_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\vdots&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;      y_n&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{array} &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;得到的效果是这个样子的：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[

\begin{align*}
  &amp; \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  &amp; (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) &amp; \cdots &amp; \phi(e_1, e_n) \\
      \vdots &amp; \ddots &amp; \vdots \\
      \phi(e_n, e_1) &amp; \cdots &amp; \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;&lt;/script&gt;

&lt;p&gt;刚我加过的小小指令就是可以给公式加入标号。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;latex&quot;&gt;&lt;span class=&quot;k&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;equation&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;exampleone&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;r = r&lt;span class=&quot;nb&quot;&gt;_&lt;/span&gt;F+ &lt;span class=&quot;k&quot;&gt;\beta&lt;/span&gt; (r&lt;span class=&quot;nb&quot;&gt;_&lt;/span&gt;M - r&lt;span class=&quot;nb&quot;&gt;_&lt;/span&gt;F) + &lt;span class=&quot;k&quot;&gt;\epsilon\end&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;equation&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;并且可以引用公式(\ref{exampleone})：&lt;/p&gt;

&lt;p&gt;\begin{equation}\label{exampleone}r = r_F+ \beta (r_M - r_F) + \epsilon\end{equation}\&lt;/p&gt;

&lt;p&gt;有关使用，强烈建议去看看kramdown和mathjax的官网，有非常详尽的介绍。和相关的Latex介绍数学公式的书籍。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;有用链接：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;kramdown官网的相关链接&lt;/a&gt;
&lt;a href=&quot;www.ctan.org/tex-archive/info/mil/mil.pdf&quot;&gt;Math into LATEX&lt;/a&gt;
&lt;a href=&quot;http://zhiqiang.org/blog/it/mathjax-make-mathematics-beautiful.html#mjx-eqn-exampleone&quot;&gt;MathJax让你爱上数学公式&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>相似度和距离小结</title>
      <link>http://yangchao.me/2014/03/distance-similarity</link>
      <pubDate>09 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/distance-similarity</guid>
      <description>&lt;p&gt;在机器学习中，相似性度量或者距离函数对于像聚类，邻域搜索这样的算法是非常重要的。在做分类时常常需要估算不同样本之间的相似性度量(Similarity Measurement)，这时通常采用的方法就是计算样本间的“距离”(Distance)。采用什么样的方法计算距离是很讲究，甚至关系到分类的正确与否。&lt;/p&gt;

&lt;p&gt;一般而言，定义一个距离函数&lt;script type=&quot;math/tex&quot;&gt;d(x,y)&lt;/script&gt;,需要满足以下几个准则：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;d(x,y) = 0 &lt;/script&gt;; //到自己的距离为0 &lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;d(x,y)&gt;=0&lt;/script&gt;    // 距离要非负 &lt;/li&gt;
  &lt;li&gt;对称性，&lt;script type=&quot;math/tex&quot;&gt;d(x,y) = d(y,x)&lt;/script&gt;  //如果A到B距离是a，那么B到A的距离也应该是a &lt;/li&gt;
  &lt;li&gt;三角形法则(两个之和大于第三边） &lt;script type=&quot;math/tex&quot;&gt;d(x,k)+ d(k,y) &gt;= d(x,y)&lt;/script&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1 欧氏距离(Euclidean Distance)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;欧氏距离是最易于理解的一种距离计算方法，源自欧氏空间中两点间的距离公式。这也是我们平时学习用到最多的。&lt;/p&gt;

&lt;p&gt;我们一般用到的是二范数的形式。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
D(x,y) = (\sum_{i=1}^{n}\left|x_i-y_i \right|)^{\frac{1}{2}}
&lt;/script&gt;

&lt;p&gt;看起来是不是又熟悉又简单。&lt;/p&gt;

&lt;p&gt;我们熟悉的欧氏距离虽然很有用，但也有明显的缺点。它将样品的不同属性（即各指标或各变量）之间的差别等同看待，这一点有时不能满足实际要求。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2 曼哈顿距离(Manhattan Distance)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 切比雪夫距离 ( Chebyshev Distance )&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 闵可夫斯基距离(Minkowski Distance)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;其实之所以把这些距离放在一起是因为这都差不多，都算是闵氏距离具体实例。&lt;/p&gt;

&lt;p&gt;闵氏距离的定义：&lt;/p&gt;

&lt;p&gt;两个&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;维变量&lt;script type=&quot;math/tex&quot;&gt;X(x_1,x_2,…,x_n)&lt;/script&gt;与 &lt;script type=&quot;math/tex&quot;&gt;Y(y_1,y_2,…,y_n)&lt;/script&gt;间的闵可夫斯基距离定义为：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
D(x,y) = ({\sum_{i=1}^{n}{|x_i-y_i|^p})^\frac{1}{p}
&lt;/script&gt;

&lt;p&gt;其中&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;是一个变参数。&lt;/p&gt;

&lt;p&gt;根据变参数的不同，闵氏距离可以表示一类的距离。&lt;/p&gt;

&lt;p&gt;当&lt;script type=&quot;math/tex&quot;&gt;p=1&lt;/script&gt;时，就是曼哈顿距离&lt;/p&gt;

&lt;p&gt;当&lt;script type=&quot;math/tex&quot;&gt;p=2&lt;/script&gt;时，就是欧氏距离&lt;/p&gt;

&lt;p&gt;当&lt;script type=&quot;math/tex&quot;&gt;p\to\infty&lt;/script&gt;时，就是切比雪夫距离&lt;/p&gt;

&lt;p&gt;有关曼哈顿和切比雪夫距离的定义大家可以上网自己去查一下。&lt;/p&gt;

&lt;p&gt;简单说来，闵氏距离的缺点主要有两个：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;将各个分量的量纲(scale)，也就是“单位”当作相同的看待&lt;/li&gt;
  &lt;li&gt;没有考虑各个分量的分布（期望，方差等)可能是不同的。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;5 马氏距离(Mahalanobis Distance)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;马氏距离是由印度统计学家马哈拉诺比斯 (P. C. Mahalanobis)提出的，表示数据的协方差距离。它是一种有效的计算两个未知样本集的相似度的方法。与欧式距离不同的是它考虑到各种特性之间的联系（例如：一条关于身高的信息会带来一条关于体重的信息，因为两者是有关联的），并且是尺度无关的 (scale-invariant)，即独立于测量尺度。&lt;/p&gt;

&lt;p&gt;有&lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt;个样本向量&lt;script type=&quot;math/tex&quot;&gt;X_1~X_m&lt;/script&gt;，协方差矩阵记为&lt;script type=&quot;math/tex&quot;&gt;S&lt;/script&gt;，均值记为向量&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;，则其中样本向量&lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;到&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;的马氏距离表示为：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Sample_1 = \{3,4,5,6\}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Sample_2 = \{2,2,8,4\}&lt;/script&gt;

&lt;p&gt;它们的均值为：
&lt;script type=&quot;math/tex&quot;&gt;
\mu = \{2.5, 3, 6.5, 5\}
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;协方差矩阵为：
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[

\begin{bmatrix}
0.25 &amp; 0.50 &amp; -0.75 &amp; 0.50 \\
0.50 &amp; 1.00 &amp; -1.50 &amp; 1.00 \\
-0.75 &amp; -1.50 &amp; 2.25 &amp; -1.50 \\
0.50 &amp; 1.00 &amp; -1.50 &amp; 1.00 
\end{bmatrix}
 %]]&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;然后套用我们刚才给出的公式就可以了。&lt;/p&gt;

&lt;p&gt;我们可以发现，如果各个样本向量之间独立同分布，协方差矩阵是单位矩阵。马氏距离也就变成了欧式距离。&lt;/p&gt;

&lt;p&gt;马氏距离不受量纲的影响，两点之间的马氏距离与原始数据的测量单位无关；由标准化数据和中心化数据 (即原始数据与均值之差）计算出的二点之间的马氏距离相同。马氏距离还可以排除变量之间的相关性的干扰。&lt;strong&gt;它的缺点是夸大了变化微小的变量的作用。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;马氏距离的计算是建立在总体样本的基础上的，这一点从上述协方差矩阵的解释中可以得出，也就是说，如果拿同样的两个样本，放入两个不同的总体中，最后计算得出的两个样本间的马氏距离通常是不相同的，除非这两个总体的协方差矩阵碰巧相同；&lt;/li&gt;
  &lt;li&gt;计算马氏距离过程中，要求总体样本数大于样本的维数，否则得到的总体样本协方差矩阵逆矩阵不存在，这种情况下，用欧式距离来代替马氏距离，也可以理解为，如果样本数小于样本的维数，这种情况下求其中两个样本的距离，采用欧式距离计算即可。&lt;/li&gt;
  &lt;li&gt;还有一种情况，满足了条件总体样本数大于样本的维数，但是协方差矩阵的逆矩阵仍然不存在，比如 &lt;script type=&quot;math/tex&quot;&gt;A（3，4）&lt;/script&gt;， &lt;script type=&quot;math/tex&quot;&gt;B（ 5， 6）&lt;/script&gt;； &lt;script type=&quot;math/tex&quot;&gt;C（ 7， 8）&lt;/script&gt;，这种情况是 因为这三个样本在其所处的二维空间平面内共线（如果是大于二维的话，比较复杂？）。这种情况下，也采用欧式距离计算。&lt;/li&gt;
  &lt;li&gt;在实际应用中 “总体样本数大于样本的维数 ”这个条件是很容易满足的，而所有样本点出现 3）中所描述的情况是很少出现的，所以在绝大多数情况下，马氏距 离是可以顺利计算的，但是马氏距离的计算是不稳定的，不稳定的来源是协方差矩阵，这也是马氏距离与欧式距离的最大差异之处。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在R中有指令。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dist(x,method=&quot;euclidean&quot;) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即为计算欧式距离，其余可选的参数还有&lt;code&gt;&quot;maximum&quot;, &quot;manhattan&quot;, &quot;canberra&quot;, &quot;binary&quot; ,&quot;minkowski&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;参考链接&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/beta2/article/details/5045020&quot;&gt;机器学习中的相似性度量&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/heaad/archive/2011/03/08/1977733.html&quot;&gt;距离和相似性度量&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/v_july_v/article/details/8203674/&quot;&gt;距离、相似度和熵的度量方法总结&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>SAC思想探索</title>
      <link>http://yangchao.me/2014/03/data-table</link>
      <pubDate>08 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/data-table</guid>
      <description>&lt;p&gt;在数据分析中，基本一半的时间都是在对原始数据进行清洗，提取，分层等相关的预处理工作。所以快速有效的对数据进行预处理，对于时间的节省，效率的提升都能起到事半功倍的效果。&lt;/p&gt;

&lt;p&gt;上一期专栏最后给大家留了一个小问题&lt;/p&gt;

&lt;pre&gt;
#    id       date      value
# 1: 27 2014-01-09 0.20597457
# 2: 27 2014-01-26 0.62911404
# 3: 27 2014-02-07 0.68702285
# 4: 37 2014-02-06 0.17655675
# 5: 37 2014-02-09 0.06178627
# 6: 37 2014-02-13 0.38410372
&lt;/pre&gt;

&lt;p&gt;有两个ID，三个日期。先算出来对于每个ID，在最靠近的两个日期中，value的平均值。&lt;/p&gt;

&lt;p&gt;问题其实不算复杂，其实懂得其中的原理之后可以触类旁通。&lt;/p&gt;

&lt;p&gt;在进入更加技术化的细节之前，先介绍下有关数据分析特别有名“S-A-C”思想。&lt;/p&gt;

&lt;p&gt;在今后的所有类似的数据处理问题中，我们都会反复提到这个思想，并反复运用。&lt;/p&gt;

&lt;p&gt;有关S-A-C思想&lt;/p&gt;

&lt;p&gt;是指R界的大牛Hadley在他发表的文章 &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jstatsoft.org/v40/i01&quot;&gt;The Split-Apply-Combine Strategy for Data Analysis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这篇文章主要介绍了如何将数据进行分层（split）-应用（Apply）-结合（Combine）的思想。&lt;/p&gt;

&lt;p&gt;稍微对R有点点了解的都应该知道Hadley，他可以说是创造了R数据分析到可视化的一个生态系统，写过的拓展包包括非常有名的plyr，dplyr，ggplot2，reshape2，lubridate，devtools，ggvis等等。&lt;/p&gt;

&lt;p&gt;上面我所提的文章就是他介绍S-A-C的思想的经典论文，实现方法是用他自己写的plyr完成的。&lt;/p&gt;

&lt;p&gt;不想看原文的，我这里通俗简单给大家介绍下文章的中心思想。&lt;/p&gt;

&lt;p&gt;其实这里有两张图可以很好的说明这一切&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sac/sac-1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/sac/sac-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实也应该也是大家在平时数据分析中经常用到的。
我们看到原数据首先对年龄进行分层，然后进行统计，然后进行加总。&lt;/p&gt;

&lt;p&gt;其实很简单，但这个就是SAC思想。&lt;/p&gt;

&lt;p&gt;但是实际应用起来可以非常复杂，&lt;/p&gt;

&lt;p&gt;因为在Apply这一个层面，可以是非常简单的简单计数统计，可以是求平均值等等描述性分析，也可以是回归，自己定义任意函数等等。&lt;/p&gt;

&lt;p&gt;所以以后我们遇到数据分析相关问题的时候，要时刻牢记SAC思想。&lt;/p&gt;

&lt;p&gt;这个思想也为我们的数据分析提供了更加清晰的思路和框架。&lt;/p&gt;

&lt;p&gt;我之前写过一个简单的plyr拓展包和相关思想的博客，大家可以去看下，算是当作补充阅读了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;http://yangchao.me/2013/03/plyr-dataming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;http://yangchao.me/2013/06/plyr-advanced&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;好，回到专栏开头的引例&lt;/p&gt;

&lt;pre&gt;
#    id       date      value
# 1: 27 2014-01-09 0.20597457
# 2: 27 2014-01-26 0.62911404
# 3: 27 2014-02-07 0.68702285
# 4: 37 2014-02-06 0.17655675
# 5: 37 2014-02-09 0.06178627
# 6: 37 2014-02-13 0.38410372
&lt;/pre&gt;

&lt;p&gt;数据字段其实并不多，要处理的也非常简单。&lt;/p&gt;

&lt;p&gt;首先我们利用SAC思想进行分析。&lt;/p&gt;

&lt;p&gt;题目要求为： 有两个ID，三个日期。先算出来对于每个ID，在最靠近的两个日期中，value的平均值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;分层：Split&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因为我要计算每一个id对应的一个平均值，所以分层的第一类显然是ID&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;计算： Apply&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对应每一个ID，我要计算一个平均值。不管中间的描述有多复杂，我们最后要得到的只是一个平均值。所以这个就是Apply的核心内容。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;整合： Combine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;就是把所有的ID和对应的平均值合并到一起。这一部可以说是最简单的。&lt;/p&gt;

&lt;p&gt;上面就是分析的思路，可以看出不管出现什么样的问题，只要按照这个套路就都能把问题逐一细化。也更加有方向。&lt;/p&gt;

&lt;p&gt;关于实现方法，可以说各个统计软件各个方法。&lt;/p&gt;

&lt;p&gt;我在专栏的导读已经提到了，我更多的使用data.table这个拓展包。&lt;/p&gt;

&lt;p&gt;有关选择data.table的原因在导读部分已经介绍的比较详尽了。&lt;/p&gt;

&lt;p&gt;比如这个问题。&lt;/p&gt;

&lt;p&gt;我们用data.table的解决代码&lt;/p&gt;

&lt;p&gt;首先构造模拟的数据集。大家把我下面这段代码复制粘贴再运行就好，不必纠结具体什么意思。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;require&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data.table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
set.seed&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sample_frame &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data.frame&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rep&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sample&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;replace&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k-Variable&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sample&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seq&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;as.Date&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2014-01-01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                              as.Date&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2014-02-13&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

DT &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; data.table&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sample_frame&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;id,date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面的过程是构造模拟数据&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;require&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data.table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
DT&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; mean&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tail&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; by &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; id&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;整个分析过程代码只有一行。
大致的代码的解释：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;by = id&lt;/code&gt;: 就是分层(Split)这一步&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mean(tail(value, 2))&lt;/code&gt;: 为计算（Apply）这一步。mean()这个函数指的是求平均值，tail()函数意思为在value这一列中，取倒数两个。即为tail(value,2)&lt;/p&gt;

&lt;p&gt;所以就是这样。&lt;/p&gt;

&lt;p&gt;有关data.table&lt;/p&gt;

&lt;p&gt;希望大家还是多看看官方住的帮助文档。&lt;/p&gt;

&lt;p&gt;我在接下来的专栏中还会反复的提到和用到。&lt;/p&gt;

&lt;p&gt;下一篇也会更加深入的讲解这个拓展包的用法。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>python正则表达式：re.sub</title>
      <link>http://yangchao.me/2014/03/python-re-sub</link>
      <pubDate>04 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/python-re-sub</guid>
      <description>&lt;p&gt;re.sub很强大，所以导致用法稍微有点复杂。所以当遇到稍微复杂的用法时候，就容易犯错。&lt;/p&gt;

&lt;p&gt;所以此处，总结一下，在使用re.sub的时候，需要注意的一些事情。&lt;/p&gt;

&lt;p&gt;re.sub共有五个参数。&lt;/p&gt;

&lt;p&gt;其中三个必选参数：pattern, repl, string&lt;/p&gt;

&lt;p&gt;两个可选参数：count, flags&lt;/p&gt;

&lt;p&gt;re.sub(pattern, repl, string, count=0, flags=0)
Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If the pattern isn’t found, string is returned unchanged. repl can be a string or a function; if it is a string, any backslash escapes in it are processed. That is, \n is converted to a single newline character, \r is converted to a carriage return, and so forth. Unknown escapes such as \j are left alone. Backreferences, such as \6, are replaced with the substring matched by group 6 in the pattern. For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;def\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*\(\s*\):&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;r&amp;#39;static PyObject*\npy_\1(void)\n{&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;&amp;#39;def myfunc():&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;static PyObject*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;py_myfunc(void)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If repl is a function, it is called for every non-overlapping occurrence of pattern. The function takes a single match object argument, and returns the replacement string. For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dashrepl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matchobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matchobj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;-{1,2}&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dashrepl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pro----gram-files&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;pro--gram files&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\sAND\s&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;amp; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Baked Beans And Spam&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IGNORECASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;Baked Beans &amp;amp; Spam&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The pattern may be a string or an RE object.
The optional argument count is the maximum number of pattern occurrences to be replaced; count must be a non-negative integer. If omitted or zero, all occurrences will be replaced. Empty matches for the pattern are replaced only when not adjacent to a previous match, so sub(‘x*’, ‘-‘, ‘abc’) returns ‘-a-b-c-‘.
In addition to character escapes and backreferences as described above, \g&lt;name&gt; will use the substring matched by the group named name, as defined by the (?P&lt;name&gt;...) syntax. \g&lt;number&gt; uses the corresponding group number; \g&amp;lt;2&amp;gt; is therefore equivalent to \2, but isn’t ambiguous in a replacement such as \g&amp;lt;2&amp;gt;0. \20 would be interpreted as a reference to group 20, not a reference to group 2 followed by the literal character &#39;0&#39;. The backreference \g&amp;lt;0&amp;gt; substitutes in the entire substring matched by the RE.&lt;/number&gt;&lt;/name&gt;&lt;/name&gt;&lt;/p&gt;

&lt;p&gt;下面详细介绍一下这5个参数的基本配置&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一个参数：pattern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;pattern，表示正则中的模式字符串，这个没太多要解释的。&lt;/p&gt;

&lt;p&gt;需要知道的是：&lt;/p&gt;

&lt;p&gt;反斜杠加数字（\N），则对应着匹配的组（matched group）&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;比如\6，表示匹配前面pattern中的第6个group&lt;/li&gt;
  &lt;li&gt;意味着，pattern中，前面肯定是存在对应的，第6个group，然后你后面也才能去引用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;比如，想要处理：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello 
, nihao crifan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;且此处的，前后的crifan，肯定是一样的。&lt;/p&gt;

&lt;p&gt;而想要把整个这样的字符串，换成crifanli&lt;/p&gt;

&lt;p&gt;则就可以这样的re.sub实现替换：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello crifan, nihao crifan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;hello (\w+), nihao \1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;crifanli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;replacedStr=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#crifanli&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;第二个参数：repl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;repl，就是replacement，被替换，的字符串的意思。&lt;/p&gt;

&lt;p&gt;repl可以是字符串，也可以是函数。&lt;/p&gt;

&lt;p&gt;如果repl是字符串的话，其中的任何反斜杠转义字符，都会被处理的。&lt;/p&gt;

&lt;p&gt;即：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;\n：会被处理为对应的换行符；&lt;/li&gt;
  &lt;li&gt;\r：会被处理为回车符；
其他不能识别的转移字符，则只是被识别为普通的字符：
比如\j，会被处理为j这个字母本身；&lt;/li&gt;
  &lt;li&gt;反斜杠加g以及中括号内一个名字，即：\g&lt;name&gt;，对应着命了名的组，named group
接着上面的举例：&lt;/name&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想要把对应的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello crifan, nihao crifan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;中的crifan提取出来，只剩：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;crifan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;就可以写成：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello crifan, nihao crifan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;hello (\w+), nihao \1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\g&amp;lt;1&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;replacedStr=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#crifan&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对应的带命名的组（named group）的版本是：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello crifan, nihao crifan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;hello (?P&amp;lt;name&amp;gt;\w+), nihao (?P=name)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\g&amp;lt;name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;replacedStr=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#crifan&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当然repl也可以是函数&lt;/p&gt;

&lt;p&gt;举例说明：&lt;/p&gt;

&lt;p&gt;比如输入内容是：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello 123 world 456&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;想要把其中的数字部分，都加上111，变成：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello 234 world 567&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;那么就可以写成：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;Function:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;【整理】详解Python中re.sub&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
 
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pythonReSubDemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        demo Pyton re.sub&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello 123 world 456&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_add111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;intStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matched&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#123&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;intValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addedValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#234&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addedValueStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addedValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addedValueStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         
    &lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(?P&amp;lt;number&amp;gt;\d+)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_add111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;replacedStr=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#hello 234 world 567&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;###############################################################################&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pythonReSubDemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;第三个参数：string&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;string，即表示要被处理，要被替换的那个string字符串。&lt;/p&gt;

&lt;p&gt;没什么特殊要说明。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第四个参数：count&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;举例说明：&lt;/p&gt;

&lt;p&gt;继续之前的例子，假如对于匹配到的内容，只处理其中一部分。&lt;/p&gt;

&lt;p&gt;比如对于：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hello 123 world 456 nihao 789&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;只是像要处理前面两个数字：123,456，分别给他们加111，而不处理789，&lt;/p&gt;

&lt;p&gt;那么就可以写成：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pythonReSubDemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        demo Pyton re.sub&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello 123 world 456 nihao 789&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_add111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;intStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matched&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#123&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;intValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addedValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#234&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addedValueStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addedValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addedValueStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         
    &lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(?P&amp;lt;number&amp;gt;\d+)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_add111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;replacedStr=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#hello 234 world 567 nihao 789&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;###############################################################################&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pythonReSubDemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;第五个参数：flags&lt;/strong&gt;
此处没有什么可以特别讲的&lt;/p&gt;

&lt;p&gt;要注意，被替换的字符串，即参数repl，是普通的字符串，不是pattern&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;即，对应的第二个参数是repl。&lt;/p&gt;

&lt;p&gt;需要你指定对应的r前缀，才是pattern：&lt;/p&gt;

&lt;p&gt;r”xxxx”&lt;/p&gt;

&lt;p&gt;不要误把第四个参数flag的值，传递到第三个参数count中了
遇到的问题：&lt;/p&gt;

&lt;p&gt;当传递第三个参数，原以为是flag的值是，&lt;/p&gt;

&lt;p&gt;结果实际上是count的值&lt;/p&gt;

&lt;p&gt;所以导致re.sub不功能，&lt;/p&gt;

&lt;p&gt;所以要参数指定清楚了：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orignialStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replacedPartStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# can omit count parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或者：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;replacedStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacePattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orignialStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replacedPartStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# must designate count parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;才可以正常工作。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;延伸阅读：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.crifan.com/python_re_sub_detailed_introduction/&quot;&gt;详解Python中的re.sub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>python正则表达式</title>
      <link>http://yangchao.me/2014/03/python-regular-expression</link>
      <pubDate>03 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/python-regular-expression</guid>
      <description>&lt;p&gt;因为自然语言处理（nltk）和最近的网页抓取都需要用到正则表达式&lt;/p&gt;

&lt;p&gt;所以在这里整理一下&lt;/p&gt;

&lt;p&gt;转载注明出处：&lt;a href=&quot;http://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html&quot;&gt;Python正则表达式&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正则为匹配字符的强大工具。我觉得学过之后对人整个的思维过程都有显著的提高。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/regular-expression/re1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/regular-expression/re2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们学习正则表达式其实无非是想完成两件事情&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;匹配&lt;/li&gt;
  &lt;li&gt;替换&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当然其中还包括编译等等比较复杂的过程。在平时中最常用的就是我以上的理解。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式”ab&lt;em&gt;“如果用于查找”abbbc”，将找到”abbb”。而如果使用非贪婪的数量词”ab&lt;/em&gt;?”，将找到”a”。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;与大多数编程语言相同，正则表达式里使用”&quot;作为转义字符，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符”&quot;，那么使用编程语言表示的正则表达式里将需要4个反斜杠”\\“：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r”\“表示。同样，匹配一个数字的”\d”可以写成r”\d”。有了原生字符串，你再也不用担心是不是漏写了反斜杠，写出来的表达式也更直观。&lt;/p&gt;

&lt;p&gt;正则表达式提供了一些可用的匹配模式，比如忽略大小写、多行匹配等。&lt;/p&gt;

&lt;p&gt;Python通过re模块提供对正则表达式的支持。使用re的一般步骤是先将正则表达式的字符串形式编译为Pattern实例，然后使用Pattern实例处理文本并获得匹配结果（一个Match实例），最后使用Match实例获得信息，进行其他的操作。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# encoding: UTF-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;# 将正则表达式编译成Pattern对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;# 使用Pattern匹配文本，获得匹配结果，无法匹配时将返回None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;hello world!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### 输出 ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# hello   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;recompilestrpattern-flag&quot;&gt;re.compile(strPattern[, flag]):&lt;/h4&gt;

&lt;p&gt;这个方法是Pattern类的工厂方法，用于将字符串形式的正则表达式编译为Pattern对象。 第二个参数flag是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如re.I | re.M。另外，你也可以在regex字符串中指定模式，比如&lt;code&gt;re.compile(&#39;pattern&#39;, re.I | re.M)&lt;/code&gt;与&lt;code&gt;re.compile(&#39;(?im)pattern&#39;)&lt;/code&gt;是等价的。 
可选值有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;re.I(re.IGNORECASE): 忽略大小写（括号内是完整写法，下同）&lt;/li&gt;
  &lt;li&gt;M(MULTILINE): 多行模式，改变’^’和’$’的行为（参见上图）&lt;/li&gt;
  &lt;li&gt;S(DOTALL): 点任意匹配模式，改变’.’的行为&lt;/li&gt;
  &lt;li&gt;L(LOCALE): 使预定字符类 \w \W \b \B \s \S 取决于当前区域设定&lt;/li&gt;
  &lt;li&gt;U(UNICODE): 使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性&lt;/li&gt;
  &lt;li&gt;X(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。以下两个正则表达式是等价的：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;&amp;quot;&amp;quot;\d +  # the integral part&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;                   \.    # the decimal point&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;                   \d *  # some fractional digits&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;\d+\.\d*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;re提供了众多模块方法用于完成正则表达式的功能。这些方法可以使用Pattern实例的相应方法替代，唯一的好处是少写一行re.compile()代码，但同时也无法复用编译后的Pattern对象。这些方法将在Pattern类的实例方法部分一起介绍。如上面这个例子可以简写为：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello world!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;re模块还提供了一个方法escape(string)，用于将string中的正则表达式元字符如*/+/?等之前加上转义符再返回，在需要大量匹配元字符时有那么一点用。&lt;/p&gt;

&lt;h4 id=&quot;match&quot;&gt;Match&lt;/h4&gt;

&lt;p&gt;Match对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用Match提供的可读属性或方法来获取这些信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;string: 匹配时使用的文本。&lt;/li&gt;
  &lt;li&gt;re: 匹配时使用的Pattern对象。&lt;/li&gt;
  &lt;li&gt;pos: 文本中正则表达式开始搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。&lt;/li&gt;
  &lt;li&gt;endpos: 文本中正则表达式结束搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。&lt;/li&gt;
  &lt;li&gt;lastindex: 最后一个被捕获的分组在文本中的索引。如果没有被捕获的分组，将为None。&lt;/li&gt;
  &lt;li&gt;lastgroup: 最后一个被捕获的分组的别名。如果这个分组没有别名或者没有被捕获的分组，将为None。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt; 
&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;方法&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;可以使用编号也可以使用别名；编号&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;代表整个匹配的子串；不填写参数时，返回&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;；没有截获字符串的组返回&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;；截获了多次的组返回最后一次截获的子串。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;以元组形式返回全部分组截获的字符串。相当于调用&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;表示没有截获字符串的组以这个值替代，默认为&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groupdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;返回以有别名的组的别名为键、以该组截获的子串为值的字典，没有别名的组不包含在内。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;含义同上。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;返回指定的组截获的子串在&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中的起始索引（子串第一个字符的索引）。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;默认值为&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;返回指定的组截获的子串在&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中的结束索引（子串最后一个字符的索引&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;默认值为&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;返回&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;7.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; 
&lt;span class=&quot;err&quot;&gt;将匹配到的分组代入&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中然后返回。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中可以使用&lt;/span&gt;\&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;或&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;、&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;引用分组，但不能使用编号&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;\&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;与&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是等价的；但&lt;/span&gt;\&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;将被认为是第&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;个分组，如果你想表达&lt;/span&gt;\&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;之后是字符&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，只能使用&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\w+) (\w+)(?P&amp;lt;sign&amp;gt;.*)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello world!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.string:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.re:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.pos:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.endpos:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endpos&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.lastindex:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastindex&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.lastgroup:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastgroup&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.group(1,2):&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.groups():&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.groupdict():&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.start(2):&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.end(2):&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;m.span(2):&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r&amp;quot;m.expand(r&amp;#39;\2 \1\3&amp;#39;):&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\2 \1\3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.string: hello world!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.re: &amp;lt;_sre.SRE_Pattern object at 0x016E1A38&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.pos: 0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.endpos: 12&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.lastindex: 3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.lastgroup: sign&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.group(1,2): (&amp;#39;hello&amp;#39;, &amp;#39;world&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.groups(): (&amp;#39;hello&amp;#39;, &amp;#39;world&amp;#39;, &amp;#39;!&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.groupdict(): {&amp;#39;sign&amp;#39;: &amp;#39;!&amp;#39;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.start(2): 6&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.end(2): 11&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.span(2): (6, 11)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.expand(r&amp;#39;\2 \1\3&amp;#39;): world hello!    &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;pattern&quot;&gt;Pattern&lt;/h4&gt;

&lt;p&gt;Pattern对象是一个编译好的正则表达式，通过Pattern提供的一系列方法可以对文本进行匹配查找。&lt;/p&gt;

&lt;p&gt;Pattern不能直接实例化，必须使用&lt;code&gt;re.compile()&lt;/code&gt;进行构造。&lt;/p&gt;

&lt;p&gt;Pattern提供了几个可读属性用于获取表达式的相关信息：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pattern: 编译时用的表达式字符串。&lt;/li&gt;
  &lt;li&gt;flags: 编译时用的匹配模式。数字形式。&lt;/li&gt;
  &lt;li&gt;groups: 表达式中分组的数量。&lt;/li&gt;
  &lt;li&gt;groupindex: 以表达式中有别名的组的别名为键、以该组对应的编号为值的字典，没有别名的组不包含在内。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\w+) (\w+)(?P&amp;lt;sign&amp;gt;.*)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOTALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;p.pattern:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;p.flags:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;p.groups:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;p.groupindex:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupindex&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# p.pattern: (\w+) (\w+)(?P&amp;lt;sign&amp;gt;.*)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# p.flags: 16&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# p.groups: 3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# p.groupindex: {&amp;#39;sign&amp;#39;: 3}    &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;实例方法[&lt;/td&gt;
      &lt;td&gt;re模块方法]：&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt; match(string[, pos[, endpos]]) | re.match(pattern, string[, flags]): 
这个方法将从string的pos下标处起尝试匹配pattern；如果pattern结束时仍可匹配，则返回一个Match对象；如果匹配过程中pattern无法匹配，或者匹配未结束就已到达endpos，则返回None。 
pos和endpos的默认值分别为0和len(string)；re.match()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。 
注意：这个方法并不是完全匹配。当pattern结束时若string还有剩余字符，仍然视为成功。想要完全匹配，可以在表达式末尾加上边界匹配符’$’。 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;  search(string[, pos[, endpos]]) | re.search(pattern, string[, flags]): 
这个方法用于查找字符串中可以匹配成功的子串。从string的pos下标处起尝试匹配pattern，如果pattern结束时仍可匹配，则返回一个Match对象；若无法匹配，则将pos加1后重新尝试匹配；直到pos=endpos时仍无法匹配则返回None。 
pos和endpos的默认值分别为0和len(string))；re.search()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。 &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# encoding: UTF-8 &lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt; 
 
&lt;span class=&quot;c&quot;&gt;# 将正则表达式编译成Pattern对象 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
 
&lt;span class=&quot;c&quot;&gt;# 使用search()查找匹配的子串，不存在能匹配的子串时将返回None &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 这个例子中使用match()无法成功匹配 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;hello world!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
 
&lt;span class=&quot;c&quot;&gt;### 输出 ### &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# world    &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt; split(string[, maxsplit]) | re.split(pattern, string[, maxsplit]): 
按照能够匹配的子串将string分割后返回列表。maxsplit用于指定最大分割次数，不指定将全部分割。 &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one1two2three3four4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;, &amp;#39;four&amp;#39;, &amp;#39;&amp;#39;]    &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt; findall(string[, pos[, endpos]]) | re.findall(pattern, string[, flags]): 
搜索string，以列表形式返回全部能匹配的子串。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one1two2three3four4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;4&amp;#39;]   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5&lt;/strong&gt; finditer(string[, pos[, endpos]]) | re.finditer(pattern, string[, flags]): 
搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one1two2three3four4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 1 2 3 4   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one1two2three3four4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 1 2 3 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6&lt;/strong&gt; sub(repl, string[, count]) | re.sub(pattern, repl, string[, count]): 
使用repl替换string中每一个匹配的子串后返回替换后的字符串。 
当repl是一个字符串时，可以使用\id或\g&lt;id&gt;、\g&lt;name&gt;引用分组，但不能使用编号0。 
当repl是一个方法时，这个方法应当只接受一个参数（Match对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。 
count用于指定最多替换次数，不指定时全部替换。 &lt;/name&gt;&lt;/id&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\w+) (\w+)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;i say, hello world!&amp;#39;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\2 \1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# say i, world hello!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# I Say, Hello World!   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;7&lt;/strong&gt; subn(repl, string[, count]) |re.sub(pattern, repl, string[, count]): 
返回 (sub(repl, string[, count]), 替换次数)。 &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\w+) (\w+)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;i say, hello world!&amp;#39;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\2 \1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (&amp;#39;say i, world hello!&amp;#39;, 2)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (&amp;#39;I Say, Hello World!&amp;#39;, 2)   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;大概就是这么多啦~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>scrapy初探-安装和简单操作</title>
      <link>http://yangchao.me/2014/03/install-scrapy</link>
      <pubDate>03 Mar 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/03/install-scrapy</guid>
      <description>&lt;p&gt;最近因为要抓取一些网页，所以搜索一些工具来实现。当然最熟悉的R也可以胜任这个事儿，比如Rcurl和XML的包都行。但是其功能还是挺受局限的，尤其和Python相比，就差的比较多了。&lt;/p&gt;

&lt;p&gt;Python的beautiful soup库其实也很不错。但是Scrapy似乎很炫的样子，不少人和我推荐了。所以就趁着项目之前的筹备期先学起来。&lt;/p&gt;

&lt;p&gt;首先是安装。&lt;/p&gt;

&lt;p&gt;– Windows&lt;/p&gt;

&lt;p&gt;我的电脑是windows8.1, 安装的时候我参考了多个网上的版本。用了将近两天时间，最后宣告失败。就是装不上。&lt;/p&gt;

&lt;p&gt;要说现在留在windows的最重要理由就是SAS了。&lt;/p&gt;

&lt;p&gt;– Mac&lt;/p&gt;

&lt;p&gt;Mac上安装其实则方便很多。&lt;/p&gt;

&lt;p&gt;但是事情没有我想象的那么简单，在Mac上安装也耗费了我不少的时间。一度情绪相当低落相当崩溃。&lt;/p&gt;

&lt;p&gt;因为Mac自带了Python2.7.5所以当时我就直接用这个版本的python了。然后安装了pip，然后按照&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;	&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;就可以了。就不是不行。&lt;/p&gt;

&lt;p&gt;后来出现了其他诸多问题。&lt;/p&gt;

&lt;p&gt;最后的办法就是所有都推到重新来，&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;安装了Homebrew，开始homebrew都安装不了，一度非常崩溃，更新了Xcode最新版之后可以了&lt;/li&gt;
  &lt;li&gt;brew python&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后一点点就可以了。&lt;/p&gt;

&lt;p&gt;安装过程整整花了我两天时间，当最后可以使用的时候已经身心俱疲了。&lt;/p&gt;

&lt;p&gt;下面就是使用过程。&lt;/p&gt;

&lt;p&gt;整个的scrapy的构架和Django有点像，有人更是说其中的机制是模仿了Django。先建立一个工程然后把要提取的放到不同的文件里。代码量并不大。而且很方便。&lt;/p&gt;

&lt;p&gt;下面简单走一个流程，看看scrapy是怎么运作的？&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;找一个要抓取的网站&lt;/h3&gt;

&lt;p&gt;按照官方放的教程，我就以&lt;code&gt;mininova&lt;/code&gt;为例&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;http://www.mininova.org/today&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;定义我们要抓取的内容&lt;/h3&gt;

&lt;p&gt;我们想文件的url，名称，描述，和大小。所以在项目文件夹下的&lt;code&gt;item.py&lt;/code&gt;中添加以下内容&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.item&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TorrentItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;定义爬虫&lt;/h3&gt;
&lt;p&gt;定制爬虫就是定义如何搜索链接和如何选取其中的数据。其中需要用到Xpath和正则的知识。&lt;/p&gt;

&lt;p&gt;首先分析页面内容：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;http://www.mininova.org/tor/2676093&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;比如这个网站&lt;/p&gt;

&lt;p&gt;Chrom可以直接观源代码&lt;/p&gt;

&lt;h5 id=&quot;tag-h1-&quot;&gt;文件名称在tag h1 中&lt;/h5&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Darwin - The Evolution Of An Exhibition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;提取应该这样：
&lt;code&gt;//h1/text()&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;div-tag-with-iddescription&quot;&gt;描述在 &amp;lt;div&amp;gt; tag with id=”description”:&lt;/h5&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Description:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
Short documentary made for Plymouth City Museum and Art Gallery regarding the setup of an exhibit about Charles Darwin in conjunction with the 200th anniversary of his birth.

...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;所以Xpath就应该是这样：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;//div[@id=&#39;description&#39;]&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-3&quot;&gt;最后，有关文件大小&lt;/h5&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;specifications&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Category:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/cat/4&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Movies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/sub/35&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Documentary&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Total size:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
150.62&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;megabyte&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Xpath提取就应该是这样的：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;//div[@id=&#39;specifications&#39;]/p[2]/text()[2]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最后爬虫文件应该长这个样子：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.spiders&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.linkextractors.sgml&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.selector&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Selector&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MininovaSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;mininova&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;allowed_domains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mininova.org&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.mininova.org/today&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tor/\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;parse_torrent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_torrent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TorrentItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//h1/text()&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//div[@id=&amp;#39;description&amp;#39;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//div[@id=&amp;#39;info-left&amp;#39;]/p[2]/text()[2]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torrent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crawl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mininova&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scraped_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后保存的数据为jason格式。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[{&amp;quot;url&amp;quot;: &amp;quot;http://www.mininova.org/tor/2676093&amp;quot;, &amp;quot;name&amp;quot;: [&amp;quot;Darwin - The Evolution Of An Exhibition&amp;quot;], &amp;quot;description&amp;quot;: [&amp;quot;Short documentary made for Plymouth ...&amp;quot;], &amp;quot;size&amp;quot;: [&amp;quot;150.62 megabyte&amp;quot;]},
# ... other items ...
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-4&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://scrapy.org/&quot;&gt;scrapy&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>数据都去哪儿了</title>
      <link>http://yangchao.me/2014/02/where-is-data</link>
      <pubDate>24 Feb 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/02/where-is-data</guid>
      <description>&lt;p&gt;在开始介绍数据分析之前，我们要了解为什么要数据分析。这就是通常说的原点思想。&lt;/p&gt;

&lt;p&gt;以学术界的经济学为例，超一流是搞思想的，用的平实精炼的语言总结经济发展规律。一流的人搞模型，用建模的数学方法来诠释经济发展规律。低一流的人用实证，也就是通常的计量经济学模型来验证。&lt;/p&gt;

&lt;p&gt;这样的解释其实不算严谨。这里虽然说低一流，但是其涉及的经济学知识，数据推导也是非常复杂。总结下来就是通常在计量经济学是为了验证理论。&lt;/p&gt;

&lt;p&gt;在业界就更加直观，首先有个总体目标，其次是有个技术目标。商业的核心就是创造价值，创造利润。技术在不断迭代，而主旋律似乎从来没有变过。所以技术是为了真正的商业目的而服务的。这里稍微跑了题，所以对于大多数技术团队，需要和其他的团队进行配合为了整体用户的体验而努力，不可太过纠结于技术。&lt;/p&gt;

&lt;p&gt;回到数据分析，刚介绍了数据分析的目的。 &lt;/p&gt;

&lt;p&gt;下面简单介绍下数据分析的基本步骤。&lt;/p&gt;

&lt;p&gt;最最重要的是，对数据的整体把握和感觉。这个有点玄虚的感觉，但确实如此。我们可以理解为经过时间磨砺的高手在看到数据的时候往往可以知道这个数据感觉是对的还是不对的，如果不对哪里不对。我了解到那些资深的首席经济分析师，精算师通常可以有这种感觉。当然，我们在初期的时候容易拘泥于技术，如何把领导交给的任务完成好，但是这种感觉的培养是必不可少的。比如，我是经济学出身，从业于商业智能，技术还可以。有时候我的同学或者同事请我帮我处理分析一些数据，其实这些基本步骤大抵差不多。就算当我得到一些结果的时候我不会解读，不知道是不是哪儿出问题了。所以，我们在处理自己行业数据的时候应避免出现这样的问题：得到了结果不会解读。&lt;/p&gt;

&lt;p&gt;数据挖掘和数据仓库的大牛Herb Edelstein说过这样一句话:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If you’ve got terabytes of data, and you’re relying on data mining to find interesting things in 
there for you, you’ve lost before you’ve even begun. You really need people who understand what 
it is they are looking for – and what they can do with it once they find it.” &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;大意是说，如果你有TB量级的数据，你想依靠数据挖掘来找到你想要的有意思的东西，你在开始前就已经迷失了。&lt;/p&gt;

&lt;p&gt;这个是我希望大家可以时刻记住的。&lt;/p&gt;

&lt;p&gt;其次，数据分析都是从最基础最底层的描述性分析开始。&lt;/p&gt;

&lt;p&gt;这个很简单，这个很重要。&lt;/p&gt;

&lt;p&gt;了解大概的数据分布情况，基本特征，对于继续分析是很有必要的。在这个基础上再进行更加深化的分析。&lt;/p&gt;

&lt;p&gt;以淘宝为例，我现在想研究双十一促销对商家和淘宝平台的影响。应该怎么办？&lt;/p&gt;

&lt;p&gt;起码先把11月每天的销量统计一遍，肯定不难发现11月11日销量特别高。然后分地域，分商家，分淘宝和天猫再做一遍。这相当于比较高层级的。&lt;/p&gt;

&lt;p&gt;这个时候会看出数据的基本趋势，再选取平均值作为基准，按比例进行同样的运算。这样一点点进行深入分析。&lt;/p&gt;

&lt;p&gt;我发现增长了或者下降了，再有针对性的深入分析。一步步都有条理，很严谨。&lt;/p&gt;

&lt;p&gt;再次，就是进行回归分析，基于机器学习的预测等等稍微高难一点的。&lt;/p&gt;

&lt;p&gt;总结下来：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;数据的把握&lt;/li&gt;
  &lt;li&gt;统计描述性分析&lt;/li&gt;
  &lt;li&gt;进一步深度分析&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;大概是这样。&lt;/p&gt;

&lt;p&gt;下面进入动手阶段。&lt;/p&gt;

&lt;p&gt;我提到过，这个专栏会讲到用R，但是不会从头来讲。所以这里我会给出一些推荐教材和推荐文章。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;有关国外的，还是最推荐&lt;a href=&quot;http://www.r-bloggers.com/&quot;&gt;R-blogger&lt;/a&gt;,有关业界学界用R的最新动态，可以说内容丰富。每次看过之后都觉得很通透很爽快。通过这个网站自然可以发掘到其他很多牛人的博客。点进去看就可以了。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.statmethods.net/&quot;&gt;Quick-R&lt;/a&gt; 这个特别推荐。尤其是初学者，可以把整个网站都过一遍，干活非常的多。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ats.ucla.edu/stat/r/&quot;&gt;UCLA的idre&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;肖凯老师的博客可以说是一个启蒙非常好的地方。&lt;a href=&quot;http://xccds1977.blogspot.hk&quot;&gt;http://xccds1977.blogspot.hk&lt;/a&gt;。但是据说这个在国内被墙掉了，不知道为什么。有心人需要想想办法了。&lt;/li&gt;
  &lt;li&gt;关于书籍。我看过讲R的书多多少少也有10多本了，对于初学者我还是最推荐《The Art of R Programming》，思路相当清晰，我觉得比《R in Action》，《R in nutshell》都要好。所以大家可以搜一下这本书。其中可以不看讲多线程的部分，前边的内容一点一点跟着来。这个配合着Quick-R足够了。然后就配合着我这本专栏。有什么问题，特别欢迎留言，我收到后会跟大家有一个充分的交流和答疑。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这里做一个小小的广告，因为想学习交互D3的数据可视化，我自己用jekyll在github上托管了一个轻量级博客。域名是:&lt;a href=&quot;yangchao.me&quot;&gt;yangchao.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上面会介绍一些我平时技术上遇到问题的总结，自己写的ggplot的简单教程等等，可能工具和内容更加丰富但是更加散漫。大家有兴趣可以去看下。有同学能注意到，我在这面写过了一些关于R的博客，所有东西是不会出现在这个专栏的，因为我不是那种偷懒的人。&lt;/p&gt;

&lt;p&gt;我发现自己平时看豆瓣阅读都是在晚上上床睡觉之前，所以这样动手的技术博客可能本身并不适合。为了达到可以和大家更好的交流，我希望大家踊跃提出自己平时数据分析遇到的问题，我们来一个充分的互动。这样效果也许是最好的。&lt;/p&gt;

&lt;p&gt;如果你现在连问题也都还提不出来，处于瞎逛的状态，我来给你提个问题。大家都来看看怎么弄，谁的代码最简洁，最方便。&lt;/p&gt;

&lt;p&gt;现在数据是这样的。&lt;/p&gt;

&lt;pre&gt;
#    id       date      value
# 1: 27 2014-01-09 0.20597457
# 2: 27 2014-01-26 0.62911404
# 3: 27 2014-02-07 0.68702285
# 4: 37 2014-02-06 0.17655675
# 5: 37 2014-02-09 0.06178627
# 6: 37 2014-02-13 0.38410372
&lt;/pre&gt;

&lt;p&gt;有两个ID，三个日期。我先算出来对于每个ID，在最靠近的两个日期中，value的平均值。&lt;/p&gt;

&lt;p&gt;实际的数据有500万行，id有3000个，日期400多天。所以用excel估计是够呛了，其他的方法大家可以想一下~
好了，这个就是这一期的作业。&lt;/p&gt;

&lt;p&gt;不会不要紧，下一节我们就要讲啦~&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>烟波至爽，数据为王</title>
      <link>http://yangchao.me/2014/02/douban</link>
      <pubDate>02 Feb 2014</pubDate>
      <author>Peter</author>
      <guid>http://yangchao.me/2014/02/douban</guid>
      <description>&lt;p&gt;最近觉得有必要把这段时间数据挖掘的知识做一个详尽的数理，有些东西总也不碰就会忘了。所以想到开一个豆瓣专栏，写一些R进行数据分析、可视化的知识。 尤其是data.table的用法。经过了一次修改，现在专栏计划已经通过了，马上就要发表了。&lt;/p&gt;

&lt;p&gt;前两天和Guy聊天，讲到我们香港的R用户现在人数已经在Dim Sum Lab放不下啦，想让我帮忙从城大定一个教室，我欣然答应。毕竟从成立的不到10个人，每次来的人都一点一点增加，心里真是高兴。下次我会做一个专门针对于&lt;strong&gt;data.table&lt;/strong&gt;的tutorial，这两天赶紧准备下。上次的&lt;code&gt;ggplot2&lt;/code&gt;的tutorial还是挺受欢迎的，当然还有&lt;code&gt;knitr&lt;/code&gt;的, Fuk的几次tutorial讲Rcurl, plyr也都非常棒。靠我们这帮子人刚开始的热情终于让越来越多的人加入到这个社区来。写《The Art of pragramming R》的老爷爷，Norm还是我们香港R用户的一员呢。&lt;/p&gt;

&lt;p&gt;现在的技术路线就是facebook上面的信息用Rcurl发布，展示的内容用knitr写Rmarkdown文件，用slidefy做presentation。 感觉活在R里边了。 &lt;/p&gt;

&lt;p&gt;最近另外一个着迷的就是emacs。 虽然我算是半个vim党，但是emacs的org mode确实太强大了，所以想好好学学。&lt;/p&gt;

&lt;p&gt;专栏是免费阅读，我先放个样章在这里。&lt;/p&gt;

&lt;p&gt;所有的专栏内容都会从新写，不会从现在博客的ggplot2的教程中直接复制过去。更加面向实际操作一点， 而不是一点点的搞起。
下面大家先一睹为快我的专栏导读把，不是吹， 以后可全是干货啊。都是我平时工作中遇到的实际问题，一点一点总结的经验呢。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;第一篇 ： 导读&lt;/h3&gt;

&lt;p&gt;在为自己的专栏想一个特别霸气的名字的时候， 我和室友正在纪录片《故宫》， 里边讲到了承德避暑山庄的烟波至爽殿，于是名字也就脱口而出。觉得很满意，显得很有底蕴，特别适合豆瓣文青聚集地。 说到数据为王，这两年有关“大数据”的概念可以说是火的不行， 可以听到大家张口闭口就大数据，都知道这是一个“大数据时代”， 都知道了有的书中提到的”相关性比因果关系更加重要“等等的观点。 &lt;/p&gt;

&lt;p&gt;很遗憾，我可能有个特立独行的毛病，一个东西一旦太过炒作太多我就不太喜欢。但是为了照顾大家的兴致， 我会在专栏最后的部分给大家分享一个大家可能认为还算是一个大数据的数据分析的例子。&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;那么我们讲什么呢？&lt;/h5&gt;

&lt;p&gt;按照章节来分类&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据处理&lt;/li&gt;
  &lt;li&gt;数据分析 （篇幅最少）&lt;/li&gt;
  &lt;li&gt;数据可视化 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;专栏主要讲解利用R语言进行数据的处理、分析、可视化的具体细节和基本要点。主要想和大家分享一下我在平时工作中最常用、也最容易上手的一些基本思路和基本技巧。尤其是关于数据可视化的部分。我非常喜欢像Economicst，New York Times刊登出来那种的图表。看过很多介绍可视化的文章和书籍， 里边分享的很多， 但是当我看到这些图表的时候，我不想只是欣赏，也想自己做出来。但是我们不管是数据分析，还是数据可视化，其中接近百分之五十的经历都是在做一些数据的预处理。把原始数据转变为我们想要的数据进而在分析或者可视化。如果跳过这一部，在我可视化的过程中对数据的操作部分，大家可能看起来就会一知半解。 所以我们会用相当大量的篇幅来介绍数据的预处理。 对数据的预处理，却也是也就包含了一些简单基本的对数据的描述性分析。&lt;/p&gt;

&lt;h5 id=&quot;r&quot;&gt;为什么用R语言？&lt;/h5&gt;

&lt;p&gt;是的，开始这个专栏意味着你要开始学习编程了。虽然其他一些工具，像Excel可以胜任部分工作，为什么要学习一种编程语言呢？
因为我们要开始学编程了！这难道还不是一个非常充分的理由么？&lt;/p&gt;

&lt;p&gt;其实还有一个理由，因为我们都很懒。对，因为懒而编程。&lt;/p&gt;

&lt;p&gt;我们想要完成一件事情，越快越好，越不费事费力越好。现在电脑可以帮我们完成的很多，只要我们会用命令指挥他们即可。在Excel中我们可以完成很多事情，但是一旦涉及到数据类型比较复杂，或是要重复性操作的时候Excel就显得有点力不从心了。&lt;/p&gt;

&lt;p&gt;借用《Learn Python the Hard Way》中的一句话， &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can code. They cannot. That is pretty damn cool.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这里不太需要再介绍R语言的优越之处，大家上网搜下即可。我的感受是R语言作为一种统计学家发明出来的语言，在数据分析方面有着比较大的优质。近来越来越受到人们的关注和重视，其开源社区的活跃程度让我们看到这个语言的生机勃勃的特性。其拥有大量的工具包，你想完成的事情已经有很多人搞定了。（这也使许多其他开源软件的好处，比如我的挚爱大GNU的Emacs。） 可谓站在了巨人的肩膀上。&lt;/p&gt;

&lt;p&gt;我们学习编程，只是想实现算法，对一般的数据结构又不那么在意，数据量也没有大到内存都放不下， 所以对于初学者，R是可以很快上手并可以尝到甜头让人继续学习的。最重要的，我们想用R处理数据画图或者数据挖掘， 已经有人把代码写好了。我们只需要会看，然后再稍微微调下就可以了。这简直太适合懒人学习了。&lt;/p&gt;

&lt;p&gt;我小时候学过8年的小提琴，天资不算聪颖，但最后练得也还不错。 所以对熟能生巧有特别的感觉。 近来Gladwell在他的畅销书《Outliers》（中文译名《异类》）有个特别时髦的理论， 10000小时理论。也讲得的是同一个意思。 每天上手练一点，慢慢也就熟悉了。无所谓高端还是屌丝， 无他， 唯手熟尔。&lt;/p&gt;

&lt;p&gt;同时我也有另外一个感触，相比于C，C++等更偏向于底层的语言，学习R好比是练钢琴，开始学习的可以唱到甜头， 不用好久可以弹出比较简单但是也很好听的曲子，像”一闪一闪亮晶晶“之类的。不像小提琴， 学了两年可能还跟拉锯一样。 但是像真正精通， 后期的学习曲线还是挺陡峭的，不可避免要学习数据结构， 面向对象等知识， 而且到后来就觉得R在运算的时候很慢， 对内存的管理并不到位等等。 但是现在， 对于大多人来说， R已经足够了，我们不需要做到 “Perfect”， 到“Fairly Good” 对于大多数人就已经足够了。&lt;/p&gt;

&lt;h5 id=&quot;section-2&quot;&gt;目标读者是哪些人？&lt;/h5&gt;

&lt;p&gt;本专栏绝对倾情奉献， 目标读者是包括但不限于&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;喜爱玩数据，喜欢可视化的人！&lt;/li&gt;
  &lt;li&gt;对编程有点兴趣，也知道这个很有用应该学，但是一直以没时间懒得学年龄大了学不动了为借口拖延症患者！！&lt;/li&gt;
  &lt;li&gt;想对自己生活有些改变的朋友，并且需要即刻行动起来的人！！！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;尤其对于第三点， 这也是我决心开设这样一个专栏的目的。这里不想心灵鸡汤， 不想拽成功学， 我是那种什么都喜欢折腾， 这么都愿意去学， 也觉得什么都有用的人。 正所谓乔布斯的“Connecting Dots”。 如果我们知道这个对于数据的处理确实有用， 想利用点时间学习下，而不只是逛逛微博， 看看韩剧， 日子这样一天天过去。 那么确实学点数据分析， 从功利主义的角度还是实用主义的角度都是高收益的。 因为我的工作现在是以数据处理为主， 过了大概一年当初的新鲜期感觉已经逐渐褪去， 自己学习的意愿也再减退。 所以这个时候我觉得有必要把我之前看过的那些书籍，走过的弯路，自己学校里比较受欢迎的讲座全都拿出来，温故而知新。 所谓教学相长， 大家一起交流。&lt;/p&gt;

&lt;p&gt;同样，对于那些编程大牛们什么都知道的人， 可能觉得这篇专栏过于幼稚，我所写太过简单简直是在侮辱他们的智商。 首先，本系列倾情奉献， 绝对不能被理解为侮辱智商。我只是可能比我的目标读者们懂得这方面的知识多一点，想一起分享让他们少走弯路。如果你们发现我这个专栏里的每一个句子每一个知识点你已经了如指掌， 还是像《Learn Python the hard way》 里的忠告&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;不要再阅读此专栏， 这不是为你们而写， 我是写给那些并不是什么都知道的人&lt;/li&gt;
    &lt;li&gt;倒空自己， 如果你已经什么都会了，就很难再向其他人学习任何东西&lt;/li&gt;
    &lt;li&gt;去学Lisp语言， 通常什么都会的人会喜欢Lisp&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;section-3&quot;&gt;专栏主要特色是什么？&lt;/h5&gt;

&lt;p&gt;我自己想到的专栏的特色可能为三个字：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;接地气&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为这个专栏有一个很重要的读者： 我的女朋友。她作为一个纯文科生，学新闻在Marketing从业的绝对文青。 热爱电影，喜欢看小说。 经常觉得我看的讲程序的书都是那种特别“有用但是枯燥“的书，缺少了一种浪漫主义色彩。 这个专栏的存在就是想证明，其实这个这个数据的世界并不枯燥， 而且相当有趣！ 这篇专栏应该看起来满满的都是爱啊！&lt;/p&gt;

&lt;p&gt;所以这个专栏算是手把手来教， 诚意十足。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我觉得哪些部分在书籍或网上的资料已经相关帖子讨论的相当详尽， 我会给出相关链接， 不会拾人牙慧。&lt;/li&gt;
  &lt;li&gt;并不会面面俱到，我会着重于数据的整理和可视化。 会将一些琐碎的小案例经过自己的整理，呈现一条主线给大家。&lt;/li&gt;
  &lt;li&gt;主要以案例学习为主， 以平时工作马上就能用的到为主要目的。 不会像一般介绍R语言从赋值， array， list， dataframe一点点讲起。并不是说这个不重要，为什么如此参见第一条。 这样的写法带来的一个缺陷就是不够系统， 但是希望可以做到一个领进门的作用。刚开始大家对于code可能什么都不动，会做出非常详尽的讲解。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但是我觉得相比于与其他的网上的教程， 我希望在如下方面可以有所胜出&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;阅读体验 &lt;/li&gt;
  &lt;li&gt;互动性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你遇到什么问题，我会尽可能为您讲解，或是给您相关资料的链接。 遇到最基本的问题解决不了这是我们开始学习编程最容易泄气的地方。当时我一个人想学习Hadoop的相关知识，但是对于linux系统的不熟悉安装时候处处碰壁， 当时心里那种无助的感觉记忆深刻。 所以这个专栏的存在就是为了让大家减轻这方面的痛苦， 更加享受编程的过程。&lt;/p&gt;

&lt;p&gt;我会根据读者的回馈来调整更新自己的内容，把大家普遍反映的问题着重讲。 &lt;/p&gt;

&lt;p&gt;但是不欢迎那些不经任何思考， 光光po问题的人。这点请参考《提问的艺术》。 请认真对待你的问题， 就像你期望大家可以认真的回答一样。在提问之前先思考下， 独立解决问题也是一种能力。提问的时候要表述清楚。 &lt;/p&gt;

&lt;p&gt;我会留作业， 也会判作业。 希望可以交到朋友， 因为和数据打交道了太久， 也想和人打打交道：）。 当然了，写了专栏，还是希望更多人看更多人喜欢！ 街坊邻居觉得好的多替我宣传哈！&lt;/p&gt;

&lt;p&gt;其实我这个人还是挺扯淡的，后期的时候大家可以看到我稍微真实可爱的一面。不过开始还是要严谨， 严肃！&lt;/p&gt;

&lt;h5 id=&quot;section-4&quot;&gt;一个例子&lt;/h5&gt;

&lt;p&gt;现在给大家一个例子， 这个例子看不懂怎么实现的不要紧。 到后来的学习中我们还会提到。主要是让大家感受下，这个专栏中我们反复见到的数据分析的一般流程。&lt;/p&gt;

&lt;p&gt;我现在有一个新浪微博的平时数据，我想来玩一玩这个数据&lt;/p&gt;

&lt;p&gt;数据是这个样子的&lt;/p&gt;

&lt;pre&gt;

            V1       V2         V3 V4 V5 V6 V7 V8  V9 V10 V11 V12
     1:      1 20120213 1011139914  0  0  1  0  0 \\N   0   0   0
     2:      2 20120218 1011139914  0  1  2  2  0 \\N   1   0   0
     3:      3 20120219 1011139914  0  1  0  0  0 \\N   2   0   0
     4:      4 20120201 1011139914  0  1  0  0  0 \\N   0   0   0
     5:      5 20120224 1011139914  0  1  2  0  0 \\N   1   0   0
    ---                                                          
835353: 835353 20120215  283149150  0  0  0  0  0 \\N   0   0   0
835354: 835354 20120202  283149150  0  0  0  0  0 \\N   0   0   0
835355: 835355 20120222  283149150  0  0  0  0  0 \\N   0   0   0
835356: 835356 20120203  283149150  0  0  0  0  0 \\N   0   0   0
835357: 835357 20120206  283149150  0  0  0  0  0 \\N   0   0   0
&lt;/pre&gt;

&lt;p&gt;可以看到，一共是83万行。12列&lt;/p&gt;

&lt;p&gt;每一列其实是有名字的，我们要重新命名&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;    library（data.table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;#  我们今后主要介绍的就是这个包，因为它是在太强大了！&lt;/span&gt;
    column_names &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; c&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;uid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fwd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cmts&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fwded&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ignore&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cmted&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;liked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;favorate&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 把新的列明起好， 因为防止中文乱码，所以我干脆用了英文来代替。分别表示ID，日期，用户ID，发帖量，评论量，回复量，转发量等等。&lt;/span&gt;
    setnames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;DT&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; paste0&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;V&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;c&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; column_names&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 把原来的列名 v1 - v12 全部换掉&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;现在数据已经是这个样子了&lt;/p&gt;

&lt;pre&gt;
            ID     date        uid origin fwd cmts reply fwded ignore cmted
     1:      1 20120213 1011139914      0   0    1     0     0    \\N     0
     2:      2 20120218 1011139914      0   1    2     2     0    \\N     1
     3:      3 20120219 1011139914      0   1    0     0     0    \\N     2
     4:      4 20120201 1011139914      0   1    0     0     0    \\N     0
     5:      5 20120224 1011139914      0   1    2     0     0    \\N     1
    ---                                                                    
835353: 835353 20120215  283149150      0   0    0     0     0    \\N     0
835354: 835354 20120202  283149150      0   0    0     0     0    \\N     0
835355: 835355 20120222  283149150      0   0    0     0     0    \\N     0
835356: 835356 20120203  283149150      0   0    0     0     0    \\N     0
835357: 835357 20120206  283149150      0   0    0     0     0    \\N     0
        liked favorate
     1:     0        0
     2:     0        0
     3:     0        0
     4:     0        0
     5:     0        0
    ---               
835353:     0        0
835354:     0        0
835355:     0        0
835356:     0        0
835357:     0        0

&lt;/pre&gt;

&lt;p&gt;这是一个月的数据，我们想对每一天所有用户的发帖量，等所有除了ID，date， uid这三个加总。&lt;/p&gt;

&lt;p&gt;在所有数据分析的开始，先要进行大概的描述性分析。虽然很简单，但是很重要&lt;/p&gt;

&lt;p&gt;这一部也就是说我像知道2012年2月每天的加总情况是怎样的&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt; sum &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; DT&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; lapply&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;.SD&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sum&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; by &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; .SDcols &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 仅仅这一句指令啊！ 就实现我说的刚才的事情！ 求出了2012年2月每天的加总量。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里data.table 包里的简洁代码对我这种代码洁癖简直就是太适合了！
之所以选择data.table， 原因有三点&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;速度快&lt;/li&gt;
  &lt;li&gt;代码简洁&lt;/li&gt;
  &lt;li&gt;但是代码不太容易懂，而且官方阅读材料比较少。这也就使得我这个专栏有了最直接的意义！&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后我就可以接着做一些可视化的工作了，比如二月有春节，我想知道春节时候的情况&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/cp6Bmzy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个图完全是用R做出的，用的是非常著名的ggplot2包。网上关于这些包的教程有不少。大家可以搜搜看看，我在这个专栏里会对一些我感兴趣的图形做出针对性的讲解。 &lt;/p&gt;

&lt;p&gt;我现在有大概16个月的微博数据，那我想看看所有这些天的8个指标变化情况应该怎办呢？可以用热力学图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/R97XKaw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个也是用R做出来的，调用一个包，代码量也非常少，我们在今后会对代码进行讲解，并分享给大家。&lt;/p&gt;

&lt;p&gt;所以总结下来，这个专栏想让大家记住三个字&lt;/p&gt;

&lt;p&gt;玩数据！&lt;/p&gt;

&lt;p&gt;这次的作业： 安装好R， 初学者建议用Rstudio，简单学习R语法。我们下次再见！&lt;/p&gt;

</description>
    </item>
    
  </channel>
</rss>